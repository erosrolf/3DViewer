pipeline {
  agent any

  environment {
    TELEGRAM_TOKEN = credentials('telegram-bot-token')
    CHAT_ID = "-1002115020059"
  }

  stages {
    stage("core_lib_build") {
      steps {
        sh 'printenv'
        echo "Start build core lib"
        dir ('src'){
          sh 'make build/core_lib.a'
        }
      }
    }

    stage("core_test") {
      steps {
        echo "Start build core test"
        dir('src') {
          sh 'make core_test'
        }
      }
    }
  }

  post {
    always {
      script {
        env.COMMIT_AUTHOR = sh(script: "git log -1 --pretty=format:'%an'", returnStdout: true).trim()
        env.COMMIT_AUTHOR = "Commit author = ${env.COMMIT_AUTHOR} \n"
        env.COMMIT_MESSAGE = sh(script: "git log -1 --pretty=format:'%s'", returnStdout: true).trim()
        env.COMMIT_MESSAGE = "Commit message = ${env.COMMIT_MESSAGE} \n"
        env.COMMIT_ID = sh(script: "git rev-parse HEAD", returnStdout: true).trim()
        env.COMMIT_ID = "Commit ID = ${env.COMMIT_ID} \n"
    }
    success {
      script {
        sh 'curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d text="üíºüíºüíº\nBuild number ${BUILD_NUMBER} pushed to ${GIT_BRANCH}, CI status = ${CI} \nPIPELINE ‚úÖ!"'
      }
    }
    failure {
      script {
        sh 'curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d text="üíºüíºüíº\nBuild number ${BUILD_NUMBER} pushed to ${GIT_BRANCH}, CI status = ${CI} \nPIPELINE ‚ùå!"'
      }
    }
  }
}
